{"version":3,"file":"static/js/906.7a0a0eb2.js","mappings":"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","sources":["webpack://platypush/./src/components/elements/Slider.vue","webpack://platypush/./src/components/elements/Slider.vue?787f","webpack://platypush/./src/components/elements/ToggleSwitch.vue","webpack://platypush/./src/components/elements/ToggleSwitch.vue?94aa","webpack://platypush/./src/components/panels/Zwave/Zwave.vue","webpack://platypush/./src/components/panels/Zwave/Group.vue","webpack://platypush/./src/components/panels/Zwave/mixin.js","webpack://platypush/./src/components/panels/Zwave/Group.vue?d37f","webpack://platypush/./src/components/panels/Zwave/Node.vue","webpack://platypush/./src/components/panels/Zwave/Node.vue?4a32","webpack://platypush/./src/components/elements/Alert.vue","webpack://platypush/./src/components/elements/Alert.vue?2ca5","webpack://platypush/./src/components/panels/Zwave/Value.vue","webpack://platypush/./src/components/panels/Zwave/Value.vue?c87f","webpack://platypush/./src/components/panels/Zwave/Zwave.vue?dac2"],"sourcesContent":["<template>\n  <label class=\"slider-wrapper\">\n    <span class=\"range-labels\" :class=\"{'with-label': withLabel}\" v-if=\"withRange\">\n      <span class=\"label left\" v-if=\"withRange\" v-text=\"range[0]\" />\n      <span class=\"label right\" v-if=\"withRange\" v-text=\"range[1]\" />\n    </span>\n\n    <span class=\"slider-container\">\n      <input class=\"slider\"\n             type=\"range\"\n             :class=\"{'with-label': withLabel}\"\n             :min=\"range[0]\"\n             :max=\"range[1]\"\n             :step=\"step\"\n             :disabled=\"disabled\"\n             :value=\"value\"\n             ref=\"range\"\n             @input.stop=\"onUpdate\"\n             @change.stop=\"onUpdate\">\n\n      <div class=\"track\" :class=\"{'with-label': withLabel}\">\n        <div class=\"track-inner\" ref=\"track\"></div>\n      </div>\n      <div class=\"thumb\" ref=\"thumb\"></div>\n      <span class=\"label\" v-if=\"withLabel\" v-text=\"value\" ref=\"label\"></span>\n    </span>\n  </label>\n</template>\n\n<script>\nexport default {\n  name: \"Slider\",\n  emits: ['input', 'change', 'mouseup', 'mousedown', 'touchstart', 'touchend', 'keyup', 'keydown'],\n  props: {\n    value: {\n      type: Number,\n    },\n\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    range: {\n      type: Array,\n      default: () => [0, 100],\n    },\n\n    step: {\n      type: Number,\n      default: 1,\n    },\n\n    withLabel: {\n      type: Boolean,\n      default: false,\n    },\n\n    withRange: {\n      type: Boolean,\n      default: false,\n    }\n  },\n\n  methods: {\n    onUpdate(event) {\n      this.update(event.target.value)\n      this.$emit(event.type, {\n        ...event,\n        target: {\n          ...event.target,\n          value: this.$refs.range.value,\n        }\n      })\n    },\n\n    update(value) {\n      const sliderWidth = this.$refs.range.clientWidth\n      const percent = (value - this.range[0]) / (this.range[1] - this.range[0])\n      const innerWidth = percent * sliderWidth\n      const thumb = this.$refs.thumb\n\n      thumb.style.left = `${innerWidth - thumb.clientWidth / 2}px`\n      this.$refs.thumb.style.transform = `translate(-${percent}%, -50%)`\n      this.$refs.track.style.width = `${innerWidth}px`\n    },\n  },\n\n  mounted() {\n    if (this.value != null)\n      this.update(this.value)\n    this.$watch(() => this.value, (newValue) => this.update(newValue))\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n$label-width: 3em;\n\n.slider-wrapper {\n  width: 100%;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n\n  .slider-container {\n    width: 100%;\n    display: flex;\n    position: relative;\n  }\n\n  .slider {\n    width: 100%;\n    cursor: pointer;\n    opacity: 0;\n\n    &::-ms-tooltip {\n      display: none;\n    }\n  }\n\n  .range-labels {\n    width: 100%;\n    display: flex;\n\n    &.with-label {\n      width: calc(100% - $label-width);\n    }\n\n    .left {\n      text-align: left;\n    }\n\n    .right {\n      @extend .pull-right;\n      flex-grow: 1;\n    }\n  }\n\n  .track {\n    width: 100%;\n    height: 0.75em;\n    background: $slider-bg;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    border-radius: 0.5em;\n    box-shadow: inset 1px 0px 3px 0 $slider-track-shadow;\n    pointer-events: none;\n\n    .track-inner {\n      width: 0;\n      height: 100%;\n      background: $slider-progress-bg;\n      border-radius: 0.5em 0 0 0.5em;\n    }\n\n    &.with-label {\n      width: calc(100% - $label-width);\n    }\n  }\n\n  .thumb {\n    width: 1.25em;\n    height: 1.25em;\n    background: $slider-thumb-bg;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translate(0%, -50%);\n    border-radius: 50%;\n    box-shadow: 1px 0px 2px 0 $slider-thumb-shadow;\n    pointer-events: none;\n  }\n\n  .label {\n    width: $label-width;\n    position: relative;\n    font-weight: normal;\n    text-align: center;\n  }\n}\n</style>\n","import { render } from \"./Slider.vue?vue&type=template&id=4b38623f&scoped=true\"\nimport script from \"./Slider.vue?vue&type=script&lang=js\"\nexport * from \"./Slider.vue?vue&type=script&lang=js\"\n\nimport \"./Slider.vue?vue&type=style&index=0&id=4b38623f&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4b38623f\"]])\n\nexport default __exports__","<template>\n  <div class=\"power-switch\" :class=\"{disabled: disabled}\" @click.stop=\"onInput\">\n    <!--suppress HtmlFormInputWithoutLabel -->\n    <input type=\"checkbox\" :checked=\"value\">\n    <label>\n      <!--suppress HtmlUnknownTag -->\n      <div class=\"switch\">\n        <div class=\"dot\" />\n      </div>\n      <span class=\"label\">\n        <slot />\n      </span>\n    </label>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ToggleSwitch\",\n  emits: ['input'],\n  props: {\n    value: {\n      type: Boolean,\n      default: false,\n    },\n\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  methods: {\n    onInput(event) {\n      if (this.disabled)\n        return false\n\n      this.$emit('input', event)\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.power-switch {\n  position: relative;\n  transition: transform .3s;\n  transform: scale(var(--scale, 1)) translateZ(0);\n\n  &:active {\n    --scale: .96;\n  }\n\n  &.disabled {\n    opacity: 0.6;\n  }\n\n  input {\n    display: none;\n    & + label {\n      border-radius: 1em;\n      display: inline-flex;\n      cursor: pointer;\n      position: relative;\n      transition: box-shadow .4s;\n\n      &:before {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        border-radius: inherit;\n        background: none;\n        opacity: var(--gradient, 0);\n        transition: opacity .4s;\n      }\n\n      .switch {\n        position: relative;\n        display: inline-block;\n        vertical-align: top;\n        height: 1.4em;\n        width: 2.5em;\n        border-radius: 1em;\n        background: $slider-bg;\n        box-shadow: inset 1px 0px 3px 0 $slider-track-shadow;\n\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          right: 0;\n          bottom: 0;\n          border-radius: inherit;\n          background: $slider-progress-bg;\n          opacity: var(--gradient, 0);\n          transition: opacity .4s;\n        }\n\n        .dot {\n          background: $toggle-dot-bg;\n          position: absolute;\n          width: 1.5em;\n          height: 1.5em;\n          border-radius: 50%;\n          box-shadow: 1px 0px 3.5px 0 $slider-thumb-shadow;\n          left: -0.25em;\n          top: -0.05em;\n          transform: translateX(var(--offset, 0));\n          transition: transform .4s, box-shadow .4s;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 0;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            border-radius: inherit;\n            background: $toggle-selected-dot-bg;\n            opacity: var(--gradient, 0);\n            transition: opacity .4s;\n          }\n        }\n      }\n\n      span {\n        line-height: 2em;\n        font-size: 1.2em;\n        color: var(--text, #646B8C);\n        font-weight: 500;\n        display: inline-block;\n        vertical-align: top;\n        position: relative;\n        margin-left: 0.5em;\n        transition: color .4s;\n      }\n\n      & + span {\n        text-align: center;\n        display: block;\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 100%;\n        opacity: 0;\n        font-size: 1em;\n        font-weight: 500;\n        color: $slider-bg;\n        transform: translateY(0.2em);\n        transition: opacity .4s, transform .4s;\n      }\n    }\n\n    &:not(:checked) {\n      & + label {\n        pointer-events: none;\n        & + span {\n          opacity: 1;\n          transform: translateY(0.6em);\n        }\n      }\n    }\n\n    &:checked {\n      & + label {\n        --offset: 1.5em;\n        --text: $slider-progress-bg;\n        --gradient: 1;\n        --shadow: rgba(0, 39, 6, .1);\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./ToggleSwitch.vue?vue&type=template&id=a6396ae8&scoped=true\"\nimport script from \"./ToggleSwitch.vue?vue&type=script&lang=js\"\nexport * from \"./ToggleSwitch.vue?vue&type=script&lang=js\"\n\nimport \"./ToggleSwitch.vue?vue&type=style&index=0&id=a6396ae8&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a6396ae8\"]])\n\nexport default __exports__","<template>\n  <div class=\"zwave-container\">\n    <Modal title=\"Network info\" ref=\"networkInfoModal\">\n      <div class=\"network-info\">\n        <Loading v-if=\"loading.status\" />\n\n        <div class=\"params\" v-else>\n          <div class=\"row\">\n            <div class=\"param-name\">State</div>\n            <div class=\"param-value\" v-text=\"status.state\"></div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"param-name\">Device</div>\n            <div class=\"param-value\" v-text=\"status.device\"></div>\n          </div>\n\n          <div class=\"section\">\n            <div class=\"header\">\n              <div class=\"title\">Statistics</div>\n            </div>\n\n            <div class=\"body\">\n              <div class=\"row\"\n                   v-for=\"(value, name) in status.stats\"\n                   :key=\"name\">\n                <div class=\"param-name\" v-text=\"name\"></div>\n                <div class=\"param-value\" v-text=\"value\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n\n    <Modal title=\"Add nodes to group\" ref=\"addNodesToGroupModal\">\n      <div class=\"group-add\">\n        <div class=\"params\">\n          <div class=\"section\">\n            <div class=\"header\">\n              <div class=\"title\">Select nodes to add</div>\n            </div>\n\n            <div class=\"body\" v-if=\"selected.groupId != null\">\n              <div class=\"row clickable\" @click=\"addToGroup(node.node_id, selected.groupId)\" :key=\"node.node_id\"\n                   v-for=\"node in Object.values(nodes || {}).filter(\n                       (n) => groups[selected.groupId].associations.indexOf(n.node_id) < 0)\">\n                <div class=\"param-name\" v-text=\"node.name\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n\n    <Alert title=\"\" ref=\"noNodeNameModal\">\n      No node name specified\n    </Alert>\n\n    <Modal title=\"Add new node\" ref=\"addNodeModal\">\n      <div class=\"node-add\">\n        <div class=\"body\">\n          <form class=\"add-node-form\" ref=\"addNodeForm\" @submit.prevent=\"addNode()\">\n            <div class=\"fields\">\n              <input type=\"text\" name=\"name\" placeholder=\"Node name\">\n              <input type=\"text\" name=\"location\" placeholder=\"Node location (optional)\">\n              <input type=\"number\" name=\"timeout\" value=\"30\" placeholder=\"Timeout (in seconds)\">\n            </div>\n\n            <div class=\"buttons\">\n              <input type=\"submit\" class=\"btn btn-primary\" value=\"OK\" :disabled=\"commandRunning\">\n              <button class=\"btn btn-default\" @click.prevent=\"closeAddNodeModal()\">\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </Modal>\n\n    <div class=\"view-options\">\n      <div class=\"view-selector col-s-6 col-m-8 col-l-9\">\n        <label>\n          <select @change=\"selected.view = $event.target.value\">\n            <option v-for=\"(id, view) in views\" :key=\"id\"\n                    v-text=\"(view[0].toUpperCase() + view.slice(1)).replace('_', ' ')\"\n                    :selected=\"view === selected.view\" :value=\"view\" />\n          </select>\n        </label>\n      </div>\n\n      <div class=\"buttons col-s-6 col-m-4 col-l-3\">\n        <button class=\"btn btn-default\" title=\"Create Scene\" @click=\"addScene\" v-if=\"selected.view === 'scenes'\">\n          <i class=\"fa fa-plus\" />\n        </button>\n\n        <Dropdown title=\"Network commands\" icon-class=\"fa fa-cog\">\n          <DropdownItem text=\"Network Info\" :disabled=\"commandRunning\" @click=\"networkInfoModalOpen\" />\n          <DropdownItem text=\"Start Network\" :disabled=\"commandRunning\" @click=\"startNetwork\" />\n          <DropdownItem text=\"Stop Network\" :disabled=\"commandRunning\" @click=\"stopNetwork\" />\n          <DropdownItem text=\"Add Node\" :disabled=\"commandRunning\"\n            @click=\"openAddNodeModal()\" v-if=\"selected.view === 'nodes'\" />\n          <DropdownItem text=\"Remove Node\" :disabled=\"commandRunning\" @click=\"removeNode\"\n                        v-if=\"selected.view === 'nodes'\" />\n          <DropdownItem text=\"Switch All On\" :disabled=\"commandRunning\" @click=\"switchAll(true)\" />\n          <DropdownItem text=\"Switch All Off\" :disabled=\"commandRunning\" @click=\"switchAll(false)\" />\n          <DropdownItem text=\"Cancel Command\" :disabled=\"commandRunning\" @click=\"cancelCommand\" />\n          <DropdownItem text=\"Kill Command\" :disabled=\"commandRunning\" @click=\"killCommand\" />\n          <DropdownItem text=\"Receive Configuration\" :disabled=\"commandRunning\" @click=\"receiveConfiguration\" />\n          <DropdownItem text=\"Create New Primary\" :disabled=\"commandRunning\" @click=\"createNewPrimary\" />\n          <DropdownItem text=\"Transfer Primary Role\" :disabled=\"commandRunning\" @click=\"transferPrimaryRole\" />\n          <DropdownItem text=\"Heal Network\" :disabled=\"commandRunning\" @click=\"healNetwork\" />\n          <DropdownItem text=\"Soft Reset\" :disabled=\"commandRunning\" @click=\"softReset\" />\n          <DropdownItem text=\"Hard Reset\" :disabled=\"commandRunning\" @click=\"hardReset\" />\n        </Dropdown>\n\n        <button class=\"btn btn-default\" title=\"Refresh Network\" @click=\"refresh\">\n          <i class=\"fa fa-sync-alt\" />\n        </button>\n      </div>\n    </div>\n\n    <div class=\"view-container\">\n      <div class=\"view nodes\" v-if=\"selected.view === 'nodes'\">\n        <Loading v-if=\"loading.nodes\" />\n        <div class=\"no-items\" v-else-if=\"!Object.keys(nodes || {}).length\">\n          <div class=\"empty\">No nodes available on the network</div>\n        </div>\n\n        <Node v-for=\"(node, nodeId) in nodes\" :key=\"nodeId\" :node=\"node\" :selected=\"selected.nodeId === nodeId\"\n              :plugin-name=\"pluginName\" @select=\"onNodeClick(nodeId)\" />\n      </div>\n\n      <div class=\"view groups\" v-else-if=\"selected.view === 'groups'\">\n        <Loading v-if=\"loading.groups\" />\n        <div class=\"no-items\" v-else-if=\"!Object.keys(groups || {}).length\">\n          <div class=\"empty\">No groups available on the network</div>\n        </div>\n\n        <Group v-for=\"(group, groupId) in groups\" :key=\"groupId\" :group=\"group\" :selected=\"selected.groupId === groupId\"\n               :nodes=\"groupId in groups ? groups[groupId].associations.map((node) => nodes[node]).\n                     reduce((nodes, node) => {nodes[node.node_id] = node; return nodes}, {}) : {}\"\n               :owner=\"group.node_id != null ? nodes[group.node_id] : null\" :plugin-name=\"pluginName\"\n               @select=\"selected.groupId = groupId === selected.groupId ? undefined : groupId\"\n               @open-add-nodes-to-group=\"$refs.addNodesToGroupModal.show()\" />\n      </div>\n\n      <div class=\"view scenes\" v-else-if=\"selected.view === 'scenes'\">\n        <Loading v-if=\"loading.scenes\" />\n        <div class=\"no-items\" v-else-if=\"!Object.keys(scenes || {}).length\">\n          <div class=\"empty\">No scenes configured on the network</div>\n        </div>\n\n        <div class=\"item scene\" :class=\"{selected: selected.sceneId === sceneId}\"\n             v-for=\"(scene, sceneId) in scenes\" :key=\"sceneId\">\n          <div class=\"row name header vertical-center\" :class=\"{selected: selected.sceneId === sceneId}\" v-text=\"scene.label\"\n               @click=\"selected.sceneId = sceneId === selected.sceneId ? undefined : sceneId\" />\n\n          <div class=\"params\" v-if=\"selected.sceneId === sceneId\">\n            <div class=\"row\">\n              <div class=\"param-name\">Scene ID</div>\n              <div class=\"param-value\" v-text=\"sceneId\" />\n            </div>\n\n            <div class=\"row\">\n              <div class=\"param-name\">Activate</div>\n              <div class=\"param-value\">\n                <ToggleSwitch :value=\"false\" @input=\"activateScene(sceneId)\" />\n              </div>\n            </div>\n\n            <div class=\"section values\" v-if=\"Object.values(scene?.values)?.length\">\n              <div class=\"header\">\n                <div class=\"title\">Values</div>\n              </div>\n\n              <div class=\"body\">\n                <div class=\"row\" v-for=\"value in Object.values(scene.values)\" :key=\"value.id_on_network\">\n                  <div class=\"param-name\">\n                    {{ nodes[value.node_id].name }} &#8680; {{ valuesMap[value.id_on_network].label }}\n                  </div>\n                  <div class=\"param-value\">\n                    <span v-text=\"value.data\" />\n                    <span class=\"buttons\">\n                    <button class=\"btn btn-default\" title=\"Remove value\"\n                            @click=\"removeValueFromScene({sceneId: sceneId, valueId: value.id_on_network})\">\n                      <i class=\"fa fa-trash\" />\n                    </button>\n                  </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"section actions\">\n              <div class=\"header\">\n                <div class=\"title\">Actions</div>\n              </div>\n\n              <div class=\"body\">\n                <div class=\"row\" @click=\"removeScene(sceneId)\">\n                  <div class=\"param-name\">Remove Scene</div>\n                  <div class=\"param-value\">\n                    <i class=\"fa fa-trash\" />\n                  </div>\n                </div>\n\n                <div class=\"row\" @click=\"renameScene(sceneId)\">\n                  <div class=\"param-name\">Rename Scene</div>\n                  <div class=\"param-value\">\n                    <i class=\"fa fa-edit\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"view values\" v-else>\n        <Loading v-if=\"loading.nodes\" />\n        <div class=\"no-items\" v-else-if=\"!Object.keys(nodes || {}).length\">\n          <div class=\"empty\">No nodes found on the network</div>\n        </div>\n\n        <div class=\"node-container\" v-for=\"(node, nodeId) in nodes\" :key=\"nodeId\">\n          <div class=\"item node\"\n               :class=\"{selected: selected.nodeId === nodeId}\"\n               v-if=\"selected.view === 'values' || Object.values(node.values).filter((value) => value.id_on_network in values[selected.view]).length > 0\">\n            <div class=\"row name header vertical-center\" :class=\"{selected: selected.nodeId === nodeId}\" v-text=\"node.name\"\n                 @click=\"onNodeClick(nodeId)\"></div>\n\n            <div class=\"params\" v-if=\"selected.nodeId === nodeId\">\n              <div class=\"value-container\" v-for=\"(value, valueId) in node.values\" :key=\"valueId\">\n                <div class=\"value-display\"\n                     v-if=\"value.id_on_network && (selected.view === 'values' || value.id_on_network in values[selected.view])\">\n                  <Value :value=\"value\" :node=\"node\" :scenes=\"scenes\" @add-to-scene=\"addValueToScene\"\n                         @remove-from-scene=\"removeValueFromScene\" @refresh=\"refreshNodes\" :plugin-name=\"pluginName\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Group from \"@/components/panels/Zwave/Group\";\nimport Node from \"@/components/panels/Zwave/Node\";\nimport Modal from \"@/components/Modal\";\nimport Alert from \"@/components/elements/Alert\";\nimport Dropdown from \"@/components/elements/Dropdown\";\nimport DropdownItem from \"@/components/elements/DropdownItem\";\nimport Loading from \"@/components/Loading\";\nimport ToggleSwitch from \"@/components/elements/ToggleSwitch\";\nimport Value from \"@/components/panels/Zwave/Value\";\nimport mixin from \"@/components/panels/Zwave/mixin\";\n\nexport default {\n  name: \"Zwave\",\n  mixins: [mixin],\n  components: {\n    Alert,\n    Dropdown,\n    DropdownItem,\n    Group,\n    Loading,\n    Modal,\n    Node,\n    ToggleSwitch,\n    Value,\n  },\n\n  data() {\n    return {\n      status: {},\n      views: {},\n      nodes: {},\n      groups: {},\n      scenes: {},\n      commandRunning: false,\n      values: {\n        switches: {},\n        dimmers: {},\n        sensors: {},\n        battery_levels: {},\n        power_levels: {},\n        bulbs: {},\n        doorlocks: {},\n        usercodes: {},\n        thermostats: {},\n        protections: {},\n      },\n      selected: {\n        view: 'nodes',\n        nodeId: undefined,\n        groupId: undefined,\n        sceneId: undefined,\n        valueId: undefined,\n      },\n      loading: {\n        status: false,\n        nodes: false,\n        groups: false,\n        scenes: false,\n      },\n    }\n  },\n\n  computed: {\n    valuesMap() {\n      const values = {}\n      for (const node of Object.values(this.nodes)) {\n        for (const value of Object.values(node.values)) {\n          values[value.id_on_network] = value\n        }\n      }\n\n      return values\n    },\n  },\n\n  methods: {\n    async refreshNodes() {\n      this.loading.nodes = true\n      try {\n        this.nodes = await this.zrequest('get_nodes')\n      } finally {\n        this.loading.nodes = false\n      }\n\n      if (Object.keys(this.nodes || {}).length)\n        this.views.values = true\n    },\n\n    async refreshGroups() {\n      this.loading.groups = true\n\n      try {\n        this.groups = Object.values(await this.zrequest('get_groups'))\n            .filter((group) => group.index)\n            .reduce((groups, group) => {\n              const id = group.group_id || group.index\n              groups[id] = group\n              return groups\n            }, {})\n      } finally {\n        this.loading.groups = false\n      }\n\n      if (Object.keys(this.groups || {}).length)\n        this.views.groups = true\n    },\n\n    async refreshScenes() {\n      this.loading.scenes = true\n\n      try {\n        this.scenes = Object.values(await this.zrequest('get_scenes'))\n            .filter((scene) => scene.scene_id)\n            .reduce((scenes, scene) => {\n              scenes[scene.scene_id] = scene\n              return scenes\n            }, {})\n      } finally {\n        this.loading.scenes = false\n      }\n\n      if (Object.keys(this.scenes || {}).length)\n        this.views.values = true\n    },\n\n    async refreshValues(type) {\n      this.loading.values = true\n\n      try {\n        this.values[type] = Object.values(await this.zrequest('get_' + type))\n            .filter((item) => item.id_on_network)\n            .reduce((values, value) => {\n              values[value.id_on_network] = true\n              return values\n            }, {})\n      } finally {\n        this.loading.values = false\n      }\n\n      if (Object.keys(this.values[type]).length)\n        this.views[type] = true\n    },\n\n    async refreshStatus() {\n      this.loading.status = true\n      try {\n        this.status = await this.zrequest('controller_status')\n      } finally {\n        this.loading.status = false\n      }\n    },\n\n    refresh() {\n      this.views = {\n        nodes: true,\n        scenes: true,\n      }\n\n      this.refreshNodes()\n      this.refreshGroups()\n      this.refreshScenes()\n      this.refreshValues('switches')\n      this.refreshValues('dimmers')\n      this.refreshValues('sensors')\n      this.refreshValues('bulbs')\n      this.refreshValues('doorlocks')\n      this.refreshValues('usercodes')\n      this.refreshValues('thermostats')\n      this.refreshValues('protections')\n      this.refreshValues('battery_levels')\n      this.refreshValues('power_levels')\n      this.refreshValues('node_config')\n      this.refreshStatus()\n    },\n\n    async addScene() {\n      let name = prompt('Scene name')\n      if (name?.length)\n        name = name.trim()\n      if (!name?.length)\n        return\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('create_scene', {label: name})\n        await this.refreshScenes()\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async removeScene(sceneId) {\n      if (!confirm('Are you sure that you want to delete this scene?'))\n        return\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('remove_scene', {scene_id: sceneId})\n        await this.refreshScenes()\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    onNodeUpdate(event) {\n      this.nodes[event.node.node_id] = event.node\n      if (event.value)\n        this.nodes[event.node.node_id].values[event.value.id_on_network] = event.value\n    },\n\n    onNodeClick(nodeId) {\n      this.selected.nodeId = nodeId === this.selected.nodeId ? undefined : nodeId\n    },\n\n    networkInfoModalOpen() {\n      this.refreshStatus()\n      this.$refs.networkInfoModal.show()\n    },\n\n    onCommandEvent(event) {\n      if (event.error && event.error.length) {\n        this.notify({\n          text: event.state_description + ': ' + event.error_description,\n          error: true,\n        })\n      }\n    },\n\n    resetAddNodeModal() {\n      [...this.$refs.addNodeModal.$el.querySelectorAll('.fields input')].forEach(\n          (el) => { el.value = (el.attributes.name.value === 'timeout') ? 30 : '' }\n      )\n    },\n\n    openAddNodeModal() {\n      this.resetAddNodeModal()\n      this.$refs.addNodeModal.show()\n    },\n\n    closeAddNodeModal() {\n      this.resetAddNodeModal()\n      this.$refs.addNodeModal.close()\n    },\n\n    async addNode() {\n      const form = this.$refs.addNodeForm\n      const name = form.querySelector('input[name=name]').value?.trim()\n      const location = form.querySelector('input[name=location]').value?.trim()\n      const timeout = parseInt(\n        form.querySelector('input[name=location]').value?.trim() || 30\n      )\n\n      if (!name?.length) {\n        this.$refs.noNodeNameModal.show()\n        return\n      }\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('add_node', {\n          name: name,\n          location: location,\n          timeout: timeout,\n        })\n\n        this.closeAddNodeModal()\n      } finally {\n        this.commandRunning = false\n      }\n\n      await this.refreshNodes()\n    },\n\n    async addToGroup(nodeId, groupId) {\n      this.commandRunning = true\n      try {\n        await this.zrequest('add_node_to_group', {\n          node_id: nodeId,\n          group_index: groupId,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n\n      await this.refreshGroups()\n    },\n\n    async removeNode() {\n      this.commandRunning = true\n      try {\n        await this.zrequest('remove_node')\n      } finally {\n        this.commandRunning = false\n      }\n\n      await this.refreshNodes()\n    },\n\n    async removeValueFromScene(event) {\n      if (!confirm('Are you sure that you want to remove this value from the scene?'))\n        return\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('scene_remove_value', {\n          id_on_network: event.valueId,\n          scene_id: event.sceneId,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n\n      await this.refreshScenes()\n    },\n\n    async renameScene(sceneId) {\n      const scene = this.scenes[sceneId]\n      let name = prompt('New name', scene.label)\n      if (name)\n        name = name.trim()\n      if (!name?.length || name === scene.label)\n        return\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('set_scene_label', {\n          new_label: name,\n          scene_id: sceneId,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n\n      await this.refreshScenes()\n    },\n\n    async startNetwork() {\n      this.commandRunning = true\n      try {\n        await this.zrequest('start_network')\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async stopNetwork() {\n      this.commandRunning = true\n      try {\n        await this.zrequest('stop_network')\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async switchAll(state) {\n      this.commandRunning = true\n      try {\n        await this.zrequest('switch_all', {state: state})\n        this.refresh()\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async cancelCommand() {\n      this.commandRunning = true\n      try {\n        await this.zrequest('cancel_command')\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async killCommand() {\n      this.commandRunning = true\n      try {\n        await this.zrequest('kill_command')\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async receiveConfiguration() {\n      this.commandRunning = true\n      try {\n        await this.zrequest('receive_configuration')\n      } finally {\n        this.commandRunning = false\n      }\n\n      this.refresh()\n    },\n\n    async createNewPrimary() {\n      this.commandRunning = true\n      try {\n        await this.zrequest('create_new_primary')\n      } finally {\n        this.commandRunning = false\n      }\n\n      this.refresh()\n    },\n\n    async transferPrimaryRole() {\n      this.commandRunning = true\n      try {\n        await this.zrequest('transfer_primary_role')\n      } finally {\n        this.commandRunning = false\n      }\n\n      this.refresh()\n    },\n\n    async healNetwork() {\n      this.commandRunning = true\n      try {\n        await this.zrequest('heal')\n      } finally {\n        this.commandRunning = false\n      }\n\n      this.refresh()\n    },\n\n    async softReset() {\n      if (!confirm(\"Are you sure that you want to do a device soft reset? This won't lose network information\"))\n        return\n\n      await this.zrequest('soft_reset')\n    },\n\n    async hardReset() {\n      if (!confirm(\"Are you sure that you want to do a device soft reset? All network information will be LOST!\"))\n        return\n\n      await this.zrequest('hard_reset')\n    },\n\n    async activateScene(sceneId) {\n      this.commandRunning = true\n      try {\n        await this.zrequest('activate_scene', {scene_id: sceneId})\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async addValueToScene(event) {\n      this.commandRunning = true\n      try {\n        await this.zrequest('scene_add_value', {\n          id_on_network: event.valueId,\n          scene_id: event.sceneId,\n          data: this.valuesMap[event.valueId].data,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n\n      this.refresh()\n    },\n  },\n\n  mounted() {\n    this.refresh()\n\n    this.subscribe(this.refreshGroups, 'on-zwave-node-group-event',\n        'platypush.message.event.zwave.ZwaveNodeGroupEvent')\n\n    this.subscribe(this.refreshScenes, 'on-zwave-node-scene-event',\n        'platypush.message.event.zwave.ZwaveNodeSceneEvent')\n\n    this.subscribe(this.refreshNodes, 'on-zwave-node-removed-event',\n        'platypush.message.event.zwave.ZwaveNodeRemovedEvent')\n\n    this.subscribe(this.onCommandEvent, 'on-zwave-command-event',\n        'platypush.message.event.zwave.ZwaveCommandEvent')\n\n    this.subscribe(this.refreshStatus, 'on-zwave-network-event',\n        'platypush.message.event.zwave.ZwaveNetworkReadyEvent',\n        'platypush.message.event.zwave.ZwaveNetworkStoppedEvent',\n        'platypush.message.event.zwave.ZwaveNetworkErrorEvent',\n        'platypush.message.event.zwave.ZwaveNetworkResetEvent')\n\n    this.subscribe(this.onNodeUpdate, 'on-zwave-node-update-event',\n        'platypush.message.event.zwave.ZwaveNodeEvent',\n        'platypush.message.event.zwave.ZwaveNodeAddedEvent',\n        'platypush.message.event.zwave.ZwaveNodeRenamedEvent',\n        'platypush.message.event.zwave.ZwaveNodeReadyEvent',\n        'platypush.message.event.zwave.ZwaveValueAddedEvent',\n        'platypush.message.event.zwave.ZwaveValueChangedEvent',\n        'platypush.message.event.zwave.ZwaveValueRemovedEvent',\n        'platypush.message.event.zwave.ZwaveValueRefreshedEvent')\n  },\n\n  unmounted() {\n    [\n      'on-zwave-node-group-event', 'on-zwave-node-scene-event', 'on-zwave-node-removed-event', 'on-zwave-command-event',\n      'on-zwave-network-event', 'on-zwave-node-update-event'\n    ].forEach((eventType) => this.unsubscribe(eventType))\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import \"common\";\n\n.zwave-container {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: auto;\n\n  .view-options {\n    display: flex;\n    width: 100%;\n    height: $header-height;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0;\n    background: $header-bg;\n    border-bottom: $default-border-2;\n    box-shadow: $border-shadow-bottom;\n\n    .view-selector {\n      display: inline-flex;\n      padding-left: .5em;\n\n      label {\n        width: 100%;\n      }\n    }\n\n    select {\n      width: 100%;\n    }\n\n    .buttons {\n      display: inline-flex;\n      margin: 0 !important;\n      justify-content: flex-end;\n\n      button {\n        border: none;\n        background: none;\n      }\n    }\n  }\n\n  .group-add {\n    margin: -2em;\n    min-width: 20em;\n    padding-bottom: 1em;\n  }\n\n  .network-info {\n    margin: -1em;\n  }\n\n  .add-node-form, .fields {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    input {\n      margin: 0.5em;\n    }\n\n    .buttons {\n      box-shadow: 0 -1px $default-shadow-color;\n      margin-top: 0.75em;\n      padding-top: 0.75em;\n      justify-content: right;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"item group\" :class=\"{selected: selected}\">\n    <div class=\"row name header vertical-center\" :class=\"{selected: selected}\" v-text=\"group.label\"\n         @click=\"$emit('select', group.index)\" />\n\n    <div class=\"params\" v-if=\"selected\">\n      <div class=\"section owner\" v-if=\"owner && Object.keys(owner).length\">\n        <div class=\"header\">\n          <div class=\"title\">Owner</div>\n        </div>\n\n        <div class=\"body\">\n          <div class=\"row\" v-text=\"owner.name\" />\n        </div>\n      </div>\n\n      <div class=\"section nodes\">\n        <div class=\"header\">\n          <div class=\"title col-10\">Nodes</div>\n          <div class=\"buttons col-2\">\n            <button class=\"btn btn-default\" title=\"Add to group\" @click=\"$emit('open-add-nodes-to-group', group.index)\"\n                    v-if=\"!group.max_associations || Object.keys(nodes || {}).length < group.max_associations\">\n              <i class=\"fa fa-plus\" />\n            </button>\n          </div>\n        </div>\n\n        <div class=\"body\">\n          <div class=\"row\" v-for=\"(node, i) in nodes\" :key=\"i\">\n            <div class=\"col-10\" v-text=\"node.name?.length ? node.name : `<Node ${node.node_id}>`\" />\n            <div class=\"buttons col-2\">\n              <button class=\"btn btn-default\" title=\"Remove from group\" :disabled=\"commandRunning\"\n                      @click=\"removeFromGroup(node.node_id)\">\n                <i class=\"fa fa-trash\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"section config\">\n        <div class=\"header\">\n          <div class=\"title\">Parameters</div>\n        </div>\n\n        <div class=\"body\">\n          <div class=\"row\">\n            <div class=\"param-name\">Index</div>\n            <div class=\"param-value\" v-text=\"group.index\"></div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"param-name\">Max associations</div>\n            <div class=\"param-value\" v-text=\"group.max_associations\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport mixin from \"@/components/panels/Zwave/mixin\";\n\nexport default {\n  name: \"Group\",\n  emits: ['select', 'open-add-nodes-to-group'],\n  mixins: [mixin],\n\n  props: {\n    group: {\n      type: Object,\n      required: true,\n    },\n    owner: {\n      type: Object,\n    },\n    nodes: {\n      type: Object,\n      default: () => { return {} },\n    },\n    selected: {\n      type: Boolean,\n      default: false,\n    }\n  },\n\n  data() {\n    return {\n      commandRunning: false,\n    }\n  },\n\n  methods: {\n    async removeFromGroup(nodeId) {\n      if (!confirm('Are you sure that you want to remove this node from ' + this.group.label + '?'))\n        return\n\n      this.commandRunning = true\n      const args = {\n        node_id: nodeId,\n      }\n\n      if (this.group.group_id != null)\n        args.group_id = this.group.group_id\n      else\n        args.group_index = this.group.index\n\n      try {\n        await this.zrequest('remove_node_from_group', args)\n      } finally {\n        this.commandRunning = false\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"common\";\n\n.section.nodes {\n  .header, .row {\n    position: relative;\n\n    .buttons {\n      position: absolute;\n      right: 0;\n      display: flex;\n      justify-content: right;\n    }\n  }\n}\n</style>\n","import Utils from \"@/Utils\";\n\nexport default {\n    mixins: [Utils],\n    props: {\n        pluginName: {\n            type: String,\n            required: true,\n        },\n    },\n\n    methods: {\n        async zrequest(method, args) {\n            return await this.request(`${this.pluginName}.${method}`, args)\n        },\n    }\n}\n","import { render } from \"./Group.vue?vue&type=template&id=56458f8e&scoped=true\"\nimport script from \"./Group.vue?vue&type=script&lang=js\"\nexport * from \"./Group.vue?vue&type=script&lang=js\"\n\nimport \"./Group.vue?vue&type=style&index=0&id=56458f8e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56458f8e\"]])\n\nexport default __exports__","<template>\n  <div class=\"item node\" :class=\"{selected: selected}\">\n    <div class=\"row name header vertical-center\" :class=\"{selected: selected}\"\n         v-text=\"node.name && node.name.length ? node.name : `<Node ${node.node_id}>`\" @click=\"$emit('select')\" />\n\n    <div class=\"params\" v-if=\"selected\">\n      <div class=\"row\">\n        <div class=\"param-name\">Name</div>\n        <div class=\"param-value\">\n          <div class=\"edit-cell\" :class=\"{hidden: !editMode.name}\">\n            <form ref=\"nameForm\" @submit.prevent=\"editName\">\n              <label>\n                <input type=\"text\" name=\"name\" :value=\"node.name\" :disabled=\"commandRunning\">\n              </label>\n\n              <span class=\"buttons\">\n                <button type=\"button\" class=\"btn btn-default\" @click=\"editMode.name = false\">\n                  <i class=\"fas fa-times\" />\n                </button>\n\n                <button type=\"submit\" class=\"btn btn-default\" :disabled=\"commandRunning\">\n                  <i class=\"fa fa-check\" />\n                </button>\n              </span>\n            </form>\n          </div>\n\n          <div :class=\"{hidden: editMode.name}\">\n            <span v-text=\"node.name?.length ? node.name : `<Node ${node.node_id}>`\" />\n            <span class=\"buttons\">\n              <button type=\"button\" class=\"btn btn-default\" @click=\"onEditMode('name')\" :disabled=\"commandRunning\">\n                <i class=\"fa fa-edit\"></i>\n              </button>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Location</div>\n        <div class=\"param-value\">\n          <div class=\"edit-cell\" :class=\"{hidden: !editMode.location}\">\n            <form ref=\"locationForm\" @submit.prevent=\"editLocation\">\n              <label>\n                <input type=\"text\" name=\"location\" :value=\"node.location\" :disabled=\"commandRunning\">\n              </label>\n\n              <span class=\"buttons\">\n                <button type=\"button\" class=\"btn btn-default\" @click=\"editMode.location = false\">\n                  <i class=\"fas fa-times\" />\n                </button>\n\n                <button type=\"submit\" class=\"btn btn-default\" :disabled=\"commandRunning\">\n                  <i class=\"fa fa-check\" />\n                </button>\n              </span>\n            </form>\n          </div>\n\n          <div :class=\"{hidden: editMode.location}\">\n            <span v-text=\"node.location?.length ? node.location : ''\" />\n            <span class=\"buttons\">\n              <button type=\"button\" class=\"btn btn-default\" @click=\"onEditMode('location')\"\n                      :disabled=\"commandRunning\">\n                <i class=\"fa fa-edit\"></i>\n              </button>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Type</div>\n        <div class=\"param-value\" v-text=\"node.type\" />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Role</div>\n        <div class=\"param-value\" v-text=\"node.role\" />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Node ID</div>\n        <div class=\"param-value\" v-text=\"node.node_id\" />\n      </div>\n\n      <div class=\"row\" v-if=\"node.neighbours.length\">\n        <div class=\"param-name\">Neighbours</div>\n        <div class=\"param-value\">\n          <div class=\"row pull-right\" v-for=\"(neighbour, i) in node.neighbours\" :key=\"i\" v-text=\"neighbour\" />\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Is Ready</div>\n        <div class=\"param-value\" v-text=\"node.is_ready\" />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Is Failed</div>\n        <div class=\"param-value\" v-text=\"node.is_failed\" />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Product ID</div>\n        <div class=\"param-value\" v-text=\"node.manufacturer_id\" />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Product Type</div>\n        <div class=\"param-value\" v-text=\"node.product_type\" />\n      </div>\n\n      <div class=\"row\" v-if=\"node.product_name?.length\">\n        <div class=\"param-name\">Product Name</div>\n        <div class=\"param-value\" v-text=\"node.product_name\" />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Manufacturer ID</div>\n        <div class=\"param-value\" v-text=\"node.manufacturer_id\" />\n      </div>\n\n      <div class=\"row\" v-if=\"node.manufacturer_name?.length\">\n        <div class=\"param-name\">Manufacturer Name</div>\n        <div class=\"param-value\" v-text=\"node.manufacturer_name\" />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Capabilities</div>\n        <div class=\"param-value\" v-text=\"node.capabilities.join(', ')\" />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Command Classes</div>\n        <div class=\"param-value\" v-text=\"node.command_classes.join(', ')\" />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Groups</div>\n        <div class=\"param-value\" v-text=\"Object.values(node.groups).map((g) => g.label || '').join(', ')\" />\n      </div>\n\n      <div class=\"row\" v-if=\"node.home_id\">\n        <div class=\"param-name\">Home ID</div>\n        <div class=\"param-value\" v-text=\"node.home_id.toString(16)\" />\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Is Awake</div>\n        <div class=\"param-value\" v-text=\"node.is_awake\" />\n      </div>\n\n      <div class=\"row\" v-if=\"node.is_locked != null\">\n        <div class=\"param-name\">Is Locked</div>\n        <div class=\"param-value\" v-text=\"node.is_locked\" />\n      </div>\n\n      <div class=\"row\" v-if=\"node.last_update\">\n        <div class=\"param-name\">Last Update</div>\n        <div class=\"param-value\" v-text=\"formatDateTime(node.last_update)\" />\n      </div>\n\n      <div class=\"row\" v-if=\"node.baud_rate\">\n        <div class=\"param-name\">Baud Rate</div>\n        <div class=\"param-value\" v-text=\"node.baud_rate\" />\n      </div>\n\n      <div class=\"row\" v-if=\"node.max_baud_rate\">\n        <div class=\"param-name\">Max Baud Rate</div>\n        <div class=\"param-value\" v-text=\"node.max_baud_rate\" />\n      </div>\n\n      <div class=\"section actions\">\n        <div class=\"header\">\n          <div class=\"title\">Actions</div>\n        </div>\n\n        <div class=\"body\">\n          <div class=\"row error\" v-if=\"node.is_failed\" @click=\"removeFailedNode\">\n            <div class=\"param-name\">Remove Failed Node</div>\n            <div class=\"param-value\">\n              <i class=\"fa fa-trash\" />\n            </div>\n          </div>\n\n          <div class=\"row error\" v-if=\"node.is_failed\" @click=\"replaceFailedNode\">\n            <div class=\"param-name\">Replace Failed Node</div>\n            <div class=\"param-value\">\n              <i class=\"fa fa-sync-alt\" />\n            </div>\n          </div>\n\n          <div class=\"row\" @click=\"heal\">\n            <div class=\"param-name\">Heal Node</div>\n            <div class=\"param-value\">\n              <i class=\"fas fa-wrench\" />\n            </div>\n          </div>\n\n          <div class=\"row\" @click=\"replicationSend\">\n            <div class=\"param-name\">Replicate info to secondary controller</div>\n            <div class=\"param-value\">\n              <i class=\"fa fa-clone\" />\n            </div>\n          </div>\n\n          <div class=\"row\" @click=\"requestNetworkUpdate\">\n            <div class=\"param-name\">Request network update</div>\n            <div class=\"param-value\">\n              <i class=\"fas fa-wifi\" />\n            </div>\n          </div>\n\n          <div class=\"row\" @click=\"requestNeighbourUpdate\">\n            <div class=\"param-name\">Request neighbours update</div>\n            <div class=\"param-value\">\n              <i class=\"fas fa-network-wired\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport mixin from \"@/components/panels/Zwave/mixin\";\n\nexport default {\n  name: \"Node\",\n  emits: ['select'],\n  mixins: [mixin],\n\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n\n    selected: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  data() {\n    return {\n      commandRunning: false,\n      editMode: {\n        name: false,\n        location: false,\n      },\n    }\n  },\n\n  methods: {\n    async removeFailedNode() {\n      if (this.commandRunning) {\n        this.notify({\n          text: 'A command is already running'\n        })\n\n        return\n      }\n\n      if (!confirm('Are you sure that you want to remove this node?'))\n        return\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('remove_node', {\n          node_id: this.node.node_id,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async replaceFailedNode() {\n      if (this.commandRunning) {\n        this.notify({\n          text: 'A command is already running'\n        })\n\n        return\n      }\n\n      if (!confirm('Are you sure that you want to replace this node?'))\n        return\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('replace_node', {\n          node_id: this.node.node_id,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async replicationSend() {\n      if (this.commandRunning) {\n        this.notify({\n          text: 'A command is already running'\n        })\n\n        return\n      }\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('replication_send', {\n          node_id: this.node.node_id,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async requestNetworkUpdate() {\n      if (this.commandRunning) {\n        this.notify({\n          text: 'A command is already running'\n        })\n\n        return\n      }\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('request_network_update', {\n          node_id: this.node.node_id,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    async requestNeighbourUpdate() {\n      if (this.commandRunning) {\n        this.notify({\n          text: 'A command is already running'\n        })\n\n        return\n      }\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('request_node_neighbour_update', {\n          node_id: this.node.node_id,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n    },\n\n    onEditMode(mode) {\n      this.editMode[mode] = true\n      const form = this.$refs[mode + 'Form']\n      const input = form.querySelector('input[type=text]')\n\n      setTimeout(() => {\n        input.focus()\n        input.select()\n      }, 10)\n    },\n\n    async editName(event) {\n      const name = event.target.querySelector('input[name=name]').value\n      this.commandRunning = true\n\n      try {\n        await this.zrequest('set_node_name', {\n          node_id: this.node.node_id,\n          new_name: name,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n\n      this.editMode.name = false\n    },\n\n    async editLocation(event) {\n      const location = event.target.querySelector('input[name=location]').value\n      this.commandRunning = true\n\n      try {\n        await this.zrequest('set_node_location', {\n          node_id: this.node.node_id,\n          location: location,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n\n      this.editMode.location = false\n    },\n\n    async heal() {\n      if (this.commandRunning) {\n        console.log('A command is already running')\n        return\n      }\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('node_heal', {\n          node_id: this.node.node_id,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"common\";\n</style>\n","import { render } from \"./Node.vue?vue&type=template&id=3da196a6&scoped=true\"\nimport script from \"./Node.vue?vue&type=script&lang=js\"\nexport * from \"./Node.vue?vue&type=script&lang=js\"\n\nimport \"./Node.vue?vue&type=style&index=0&id=3da196a6&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3da196a6\"]])\n\nexport default __exports__","<template>\n  <Modal ref=\"modal\" :title=\"title\">\n    <div class=\"dialog-content\">\n      <slot />\n    </div>\n\n    <div class=\"buttons\">\n      <button type=\"button\" class=\"cancel-btn\" @click=\"close\" @touch=\"close\">\n        <i class=\"fas fa-xmark\" /> &nbsp; Close\n      </button>\n    </div>\n  </Modal>\n</template>\n\n<script>\nimport Modal from \"@/components/Modal\";\n\nexport default {\n  emits: ['input', 'click', 'touch'],\n  components: {Modal},\n  props: {\n    title: {\n      type: String,\n    },\n  },\n\n  methods: {\n    show() {\n      this.$refs.modal.show()\n    },\n\n    close() {\n      this.$refs.modal.hide()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n:deep(.modal) {\n  .dialog-content {\n    padding: 1em;\n  }\n\n  .buttons {\n    display: flex;\n    flex-direction: row;\n    justify-content: right;\n    padding: 1em 0 1em 1em;\n    border: 0;\n    border-radius: 0;\n    box-shadow: 0 -1px $default-shadow-color;\n\n    button {\n      padding: 0.5em 1em;\n      border: 1px solid $border-color-2;\n      border-radius: 1em;\n\n      &:hover {\n        background: $hover-bg;\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./Alert.vue?vue&type=template&id=c1863a74&scoped=true\"\nimport script from \"./Alert.vue?vue&type=script&lang=js\"\nexport * from \"./Alert.vue?vue&type=script&lang=js\"\n\nimport \"./Alert.vue?vue&type=style&index=0&id=c1863a74&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c1863a74\"]])\n\nexport default __exports__","<template>\n  <div class=\"section value\">\n    <div class=\"header\">\n      <div class=\"title\">\n        <button class=\"btn btn-default btn-value-name-edit\" title=\"Edit value name\" :disabled=\"commandRunning\"\n                :data-id-on-network=\"value.id_on_network\" @click=\"editName\">\n          <i class=\"fa fa-edit\" />\n        </button>\n        {{ value.label }}\n      </div>\n    </div>\n\n    <div class=\"body\">\n      <div class=\"row\">\n        <div class=\"param-name\">Value</div>\n        <div class=\"param-value\">\n          <div class=\"value-view\" v-if=\"value.is_read_only\">\n            <div class=\"value-data\" v-text=\"value.data\" ></div>\n            <div class=\"unit\" v-text=\"value.units\" v-if=\"value.units?.length\" />\n          </div>\n\n          <div class=\"value-edit\" v-else>\n            <div :class=\"['col-' + (value.units?.length ? '11' : '12')]\">\n              <div class=\"list\" v-if=\"value.type === 'List'\">\n                <label>\n                  <select @change=\"onValueChange\">\n                    <option v-for=\"(data, index) in value.data_items\"\n                            v-text=\"typeof data === 'object' ? data.text : data\"\n                            :key=\"index\"\n                            :selected=\"typeof data === 'object' ? value.data === data.value : value.data === data\"\n                            :value=\"typeof data === 'object' ? data.value : index\">\n                    </option>\n                  </select>\n                </label>\n              </div>\n\n              <div class=\"numeric slider-container\"\n                   v-else-if=\"['Int', 'Long', 'Byte', 'Decimal', 'Short'].indexOf(value.type) >= 0\">\n                <div class=\"col-10\">\n                  <div class=\"row\">\n                    <span class=\"value-min\" v-text=\"value.min\" />\n                    <span class=\"value-max\" v-text=\"value.max\" />\n                  </div>\n                  <div class=\"row\">\n                    <label>\n                      <Slider :range=\"[value.min, value.max]\" :value=\"value.data\" @change=\"onValueChange\" />\n                    </label>\n                  </div>\n                </div>\n                <div class=\"col-2\">\n                  <label>\n                    <input type=\"text\" :value=\"value.data\" @change=\"onValueChange\">\n                  </label>\n                </div>\n              </div>\n\n              <div class=\"boolean\" v-else-if=\"['Bool', 'Button'].indexOf(value.type) >= 0\">\n                <ToggleSwitch :value=\"value.data\" @input=\"onValueChange($event, !value.data)\" />\n              </div>\n\n              <div class=\"value-data\" v-else>\n                <label>\n                  <input type=\"text\" :value=\"value.data\" @change=\"onValueChange\" />\n                </label>\n              </div>\n            </div>\n\n            <div class=\"col-1 unit\" v-text=\"value.units\" v-if=\"value.units?.length\" />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\" v-if=\"sceneId != null\" style=\"cursor: pointer\"\n           @click=\"$emit('remove-from-scene', {valueId: value.id_on_network, sceneId: sceneId})\">\n        <div class=\"param-name\">Remove From Scene</div>\n        <div class=\"param-value\">\n          <i class=\"fa fa-trash\"></i>\n        </div>\n      </div>\n\n      <div class=\"row\" style=\"cursor: pointer\" v-if=\"addValueToSceneItems?.length\">\n        <div class=\"param-name\">Add To Scene</div>\n        <div class=\"param-value\">\n          <Dropdown title=\"Add to scene\" icon-class=\"fa fa-plus\">\n            <DropdownItem v-for=\"(scene, i) in addValueToSceneItems\" :key=\"i\"\n                          :text=\"scene.label\" :disabled=\"commandRunning\"\n                          @click=\"$emit('add-to-scene', {sceneId: scene.scene_id, valueId: value.id_on_network})\" />\n          </Dropdown>\n        </div>\n      </div>\n\n      <div class=\"row\" v-if=\"value.help?.length\">\n        <div class=\"param-name\">Help</div>\n        <div class=\"param-value\" v-text=\"value.help\"></div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Value ID</div>\n        <div class=\"param-value\" v-text=\"value.value_id\"></div>\n      </div>\n\n      <div class=\"row\" v-if=\"value.value_id !== value.id_on_network\">\n        <div class=\"param-name\">ID on Network</div>\n        <div class=\"param-value\" v-text=\"value.id_on_network\"></div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"param-name\">Command Class</div>\n        <div class=\"param-value\" v-text=\"value.command_class_name || value.command_class\"></div>\n      </div>\n\n      <div class=\"row\" v-if=\"value.last_update\">\n        <div class=\"param-name\">Last Update</div>\n        <div class=\"param-value\" v-text=\"formatDateTime(value.last_update)\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Dropdown from \"@/components/elements/Dropdown\";\nimport DropdownItem from \"@/components/elements/DropdownItem\";\nimport ToggleSwitch from \"@/components/elements/ToggleSwitch\";\nimport Slider from \"@/components/elements/Slider\";\nimport mixin from \"@/components/panels/Zwave/mixin\";\n\nexport default {\n  name: \"Value\",\n  components: {Slider, Dropdown, DropdownItem, ToggleSwitch},\n  mixins: [mixin],\n  emits: ['remove-from-scene', 'add-to-scene', 'refresh'],\n\n  props: {\n    value: {\n      type: Object,\n      required: true,\n    },\n    node: {\n      type: Object,\n      required: true,\n    },\n    selected: {\n      type: Boolean,\n      default: false,\n    },\n    sceneId: {\n      type: Number,\n    },\n    scenes: {\n      type: Object,\n      default: () => { return {} },\n    },\n  },\n\n  data() {\n    return {\n      commandRunning: false,\n    }\n  },\n\n  computed: {\n    addValueToSceneItems() {\n      return Object.values(this.scenes || {}).filter((scene) => {\n        return !(this.value.id_on_network in scene.values)\n      })\n    },\n  },\n\n  methods: {\n    async editName() {\n      const value = this.node.values[this.value.id_on_network]\n      let name = prompt('New name', value.label)\n      if (name?.length)\n        name = name.trim()\n      if (!name?.length || name === value.label)\n        return\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('set_value_label', {\n          id_on_network: value.id_on_network,\n          new_label: name,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n\n      this.$emit('refresh')\n      this.notify({\n        text: 'Value successfully renamed',\n        image: {\n          iconClass: 'fa fa-check'\n        }\n      })\n    },\n\n    async onValueChange(event, data) {\n      const target = event.target ? event.target : event.event.target.parentElement\n      const value = this.node.values[this.value.id_on_network]\n      if (data === undefined)\n        data = target.value != null ? target.value : event.value\n\n      switch (value.type) {\n        case 'List':\n          data = value.data_items[event.target.value]\n          break\n\n        case 'Int':\n        case 'Short':\n        case 'Long':\n        case 'Byte':\n          data = parseInt(data)\n          break\n\n        case 'Decimal':\n          data = parseFloat(data)\n          break\n      }\n\n      if (typeof data === 'object')\n        data = data.value\n\n      this.commandRunning = true\n      try {\n        await this.zrequest('set_value', {\n          id_on_network: value.id_on_network,\n          data: data,\n        })\n      } finally {\n        this.commandRunning = false\n      }\n\n      this.$emit('refresh')\n      this.notify({\n        text: 'Value successfully modified',\n        image: {\n          iconClass: 'fa fa-check'\n        }\n      })\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"common\";\n\n.node-container {\n  &:first-child {\n    .item.node {\n      &:hover {\n        border-radius: 1.5em 1.5em 0 0;\n      }\n    }\n  }\n\n  &:last-child {\n    .item.node {\n      &:hover {\n        border-radius: 0 0 1.5em 1.5em;\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./Value.vue?vue&type=template&id=0021cd76&scoped=true\"\nimport script from \"./Value.vue?vue&type=script&lang=js\"\nexport * from \"./Value.vue?vue&type=script&lang=js\"\n\nimport \"./Value.vue?vue&type=style&index=0&id=0021cd76&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0021cd76\"]])\n\nexport default __exports__","import { render } from \"./Zwave.vue?vue&type=template&id=2a026312\"\nimport script from \"./Zwave.vue?vue&type=script&lang=js\"\nexport * from \"./Zwave.vue?vue&type=script&lang=js\"\n\nimport \"./Zwave.vue?vue&type=style&index=0&id=2a026312&lang=scss\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","ref","withRange","withLabel","type","min","range","max","step","disabled","value","onUpdate","name","emits","props","Number","Boolean","default","Array","methods","event","this","update","target","$emit","$refs","sliderWidth","clientWidth","percent","innerWidth","thumb","style","left","transform","track","width","mounted","$watch","newValue","__exports__","render","onInput","checked","placeholder","title","loading","status","state","device","stats","key","selected","groupId","Object","values","nodes","filter","node","addToGroup","node_id","addNode","commandRunning","closeAddNodeModal","view","$event","views","id","toUpperCase","slice","replace","addScene","text","networkInfoModalOpen","startNetwork","stopNetwork","openAddNodeModal","removeNode","switchAll","cancelCommand","killCommand","receiveConfiguration","createNewPrimary","transferPrimaryRole","healNetwork","softReset","hardReset","refresh","keys","length","nodeId","pluginName","onNodeClick","groups","group","associations","map","owner","undefined","addNodesToGroupModal","show","scenes","scene","sceneId","label","activateScene","id_on_network","valuesMap","data","removeValueFromScene","removeScene","renameScene","valueId","addValueToScene","refreshNodes","index","max_associations","i","removeFromGroup","mixins","Utils","String","required","async","method","args","request","mixin","confirm","group_id","group_index","zrequest","editMode","editName","onEditMode","location","editLocation","role","neighbours","neighbour","is_ready","is_failed","manufacturer_id","product_type","product_name","manufacturer_name","capabilities","join","command_classes","g","home_id","toString","is_awake","is_locked","last_update","baud_rate","max_baud_rate","removeFailedNode","replaceFailedNode","heal","replicationSend","requestNetworkUpdate","requestNeighbourUpdate","notify","mode","form","input","querySelector","setTimeout","focus","select","new_name","console","log","close","components","Modal","modal","hide","is_read_only","units","onValueChange","data_items","indexOf","addValueToSceneItems","scene_id","help","value_id","command_class_name","command_class","Slider","Dropdown","DropdownItem","ToggleSwitch","computed","prompt","trim","new_label","image","iconClass","parentElement","parseInt","parseFloat","Alert","Group","Loading","Node","Value","switches","dimmers","sensors","battery_levels","power_levels","bulbs","doorlocks","usercodes","thermostats","protections","reduce","item","refreshGroups","refreshScenes","refreshValues","refreshStatus","onNodeUpdate","networkInfoModal","onCommandEvent","error","state_description","error_description","resetAddNodeModal","addNodeModal","$el","querySelectorAll","forEach","el","attributes","addNodeForm","timeout","noNodeNameModal","subscribe","unmounted","eventType","unsubscribe"],"sourceRoot":""}