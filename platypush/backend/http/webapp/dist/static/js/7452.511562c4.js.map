{"version":3,"file":"static/js/7452.511562c4.js","mappings":"sLACOA,MAAM,sB,kHAAXC,EAAAA,EAAAA,IAYM,MAZNC,EAYM,CAXWC,EAAAC,UAAO,WAAtBC,EAAAA,EAAAA,IAA0BC,EAAA,CAAAC,IAAA,KACgBJ,EAAAK,MAAMC,S,WAIhDJ,EAAAA,EAAAA,IAKkBK,EAAA,C,MALRC,QAASR,EAAAK,KACTI,QAAS,aACT,kBAAiBT,EAAAU,eACjBC,SAAMC,EAAA,KAAAA,EAAA,GAAAC,GAAEb,EAAAU,eAAiBG,GACzBC,OAAIF,EAAA,KAAAA,EAAA,GAAAC,GAAEE,EAAAC,MAAM,OAAQH,K,yCARwB,WAAtDX,EAAAA,EAAAA,IAEUe,EAAA,C,MAFA,eAAa,G,mBAAiC,IAExD,UAFwD,yB,qDAmB5D,GACEC,MAAO,CAAC,QACRC,OAAQ,CAACC,EAAAA,GACTC,WAAY,CACVC,QAAO,IACPC,QAAO,IACPC,QAAOA,EAAAA,GAGTC,IAAAA,GACE,MAAO,CACLpB,KAAM,GACNJ,SAAS,EACTS,eAAgB,KAEpB,EAEAgB,QAAS,CACP,cAAMC,GACJC,KAAK3B,SAAU,EACf,IACE2B,KAAKvB,YAAcuB,KAAKC,QAAQ,qBAAqBC,KAAIC,IAAG,IACvDA,EACHC,KAAM,aAEV,CAAE,QACAJ,KAAK3B,SAAU,CACjB,CACF,GAGFgC,OAAAA,GACEL,KAAKD,UACP,G,UChDF,MAAMO,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://platypush/./src/components/panels/Media/Providers/YouTube/Feed.vue","webpack://platypush/./src/components/panels/Media/Providers/YouTube/Feed.vue?abe5"],"sourcesContent":["<template>\n  <div class=\"media-youtube-feed\">\n    <Loading v-if=\"loading\" />\n    <NoItems :with-shadow=\"false\" v-else-if=\"!feed?.length\">\n      No videos found.\n    </NoItems>\n\n    <Results :results=\"feed\"\n             :sources=\"{'youtube': true}\"\n             :selected-result=\"selectedResult\"\n             @select=\"selectedResult = $event\"\n             @play=\"$emit('play', $event)\"\n             v-else />\n  </div>\n</template>\n\n<script>\nimport NoItems from \"@/components/elements/NoItems\";\nimport Loading from \"@/components/Loading\";\nimport Results from \"@/components/panels/Media/Results\";\nimport Utils from \"@/Utils\";\n\nexport default {\n  emits: ['play'],\n  mixins: [Utils],\n  components: {\n    Loading,\n    NoItems,\n    Results,\n  },\n\n  data() {\n    return {\n      feed: [],\n      loading: false,\n      selectedResult: null,\n    }\n  },\n\n  methods: {\n    async loadFeed() {\n      this.loading = true\n      try {\n        this.feed = (await this.request('youtube.get_feed')).map(item => ({\n          ...item,\n          type: 'youtube',\n        }))\n      } finally {\n        this.loading = false\n      }\n    },\n  },\n\n  mounted() {\n    this.loadFeed()\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.media-youtube-feed {\n  height: 100%;\n  overflow: auto;\n}\n</style>\n","import { render } from \"./Feed.vue?vue&type=template&id=d9e6809e&scoped=true\"\nimport script from \"./Feed.vue?vue&type=script&lang=js\"\nexport * from \"./Feed.vue?vue&type=script&lang=js\"\n\nimport \"./Feed.vue?vue&type=style&index=0&id=d9e6809e&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d9e6809e\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","$data","loading","_createBlock","_component_Loading","key","feed","length","_component_Results","results","sources","selectedResult","onSelect","_cache","$event","onPlay","_ctx","$emit","_component_NoItems","emits","mixins","Utils","components","Loading","NoItems","Results","data","methods","loadFeed","this","request","map","item","type","mounted","__exports__","render"],"sourceRoot":""}