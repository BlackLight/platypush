{"version":3,"file":"static/js/3724.58fb4f56.js","mappings":"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","sources":["webpack://platypush/./src/components/panels/LightHue/Index.vue","webpack://platypush/./src/components/panels/Light/Utils.vue","webpack://platypush/./src/components/panels/Light/Utils.vue?50cb","webpack://platypush/./src/components/panels/LightHue/Index.vue?9d94"],"sourcesContent":["<template>\n  <Loading v-if=\"loading\" />\n  <LightPlugin plugin-name=\"light.hue\" :config=\"config\" :lights=\"lights\" :groups=\"groups\" :scenes=\"scenes\"\n               :animations=\"animations\" :initial-group=\"initialGroup\" :loading-groups=\"loadingGroups\"\n               :color-converter=\"colorConverter\" @group-toggle=\"toggleGroup\" @light-changed=\"onLightChanged\"\n               @light-toggle=\"toggleLight\" @set-light=\"setLight\" @set-group=\"setGroup\" @select-scene=\"setScene\"\n               @start-animation=\"startAnimation\" @stop-animation=\"stopAnimation\" @refresh=\"refresh(true)\"/>\n</template>\n\n<script>\nimport LightPlugin from \"@/components/panels/Light/Index\";\nimport LightUtils from \"@/components/panels/Light/Utils\";\nimport { ColorConverter } from \"@/components/panels/Light/color\"\nimport Utils from \"@/Utils\";\nimport Loading from \"@/components/Loading\";\n\nexport default {\n  name: \"LightHue\",\n  components: {Loading, LightPlugin},\n  mixins: [Utils, LightUtils],\n  props: {\n    config: {\n      type: Object,\n      default: () => {},\n    },\n  },\n\n  data() {\n    return {\n      loading: false,\n      colorConverter: new ColorConverter({\n        hue: [0, 65535],\n        sat: [0, 255],\n        bri: [0, 255],\n        ct: [150, 500],\n      })\n    }\n  },\n\n  computed: {\n    initialGroup() {\n      if (!this.config.groups || !Object.keys(this.config.groups).length)\n        return null\n\n      const group = this.config.groups[0]\n      if (group in this.groups)\n        return this.groups[group].id\n      else if (group in this.groupsByName)\n        return this.groupsByName[group].id\n      return null\n    },\n  },\n\n  methods: {\n    async getLights() {\n      return await this.request('light.hue.get_lights')\n    },\n\n    async getGroups() {\n      return Object.entries(await this.request('light.hue.get_groups'))\n          .filter((group) => !group[1].recycle && group[1].type.toLowerCase() === 'room')\n          .reduce((obj, [id, group]) => {\n            obj[id] = group\n            return obj\n          }, {})\n    },\n\n    async getScenes() {\n      return Object.entries(await this.request('light.hue.get_scenes'))\n          .filter((scene) => !scene[1].recycle && scene[1].type.toLowerCase() === 'lightscene')\n          .reduce((obj, [id, scene]) => {\n            obj[id] = scene\n            return obj\n          }, {})\n    },\n\n    async getAnimations() {\n      return await this.request('light.hue.get_animations')\n    },\n\n    async toggleGroup(group) {\n      let groups = Object.values(this.groups)\n      let args = {\n        groups: groups.map((group) => group.name)\n      }\n\n      if (group != null) {\n        groups = [group]\n        args = {\n          groups: [group.name],\n        }\n      }\n\n      await this.groupAction('light.hue.toggle',  args, ...groups)\n      await this.refresh(true)\n    },\n\n    async toggleLight(light) {\n      const lights = [light]\n      const args = light != null ? {\n        lights: [light.name],\n      } : {}\n\n      await this.lightAction('light.hue.toggle',  args, ...lights)\n      await this.refresh(true)\n    },\n\n    async setLight(event) {\n      let lights = Object.keys(this.lights)\n      const light = event.light\n      const args = {}\n\n      if (light) {\n        args.lights = [light.name]\n        lights = [light]\n      }\n\n      const self = this\n      const requests = Object.entries(event.value).map(([attr, value]) => {\n        let method = null;\n        args.value = value\n\n        switch (attr) {\n          case 'brightness':\n            method = 'light.hue.bri'\n            break\n\n          case 'temperature':\n            method = 'light.hue.ct'\n            break\n\n          case 'xy':\n            method = 'light.hue.xy'\n            break\n        }\n\n        if (method)\n          return self.lightAction(method, args, ...lights)\n      }).filter((req) => req != null)\n\n      await Promise.all(requests)\n      await this.refresh(true)\n    },\n\n    async setGroup(event) {\n      if (!event.groupId)\n        return this.setLight(event)\n\n      const group = this.groups[event.groupId]\n      const args = {\n        groups: [group.name],\n      }\n\n      const self = this\n      const requests = Object.entries(event.value).map(([attr, value]) => {\n        let method = null;\n        args.value = value\n\n        switch (attr) {\n          case 'brightness':\n            method = 'light.hue.bri'\n            break\n\n          case 'temperature':\n            method = 'light.hue.ct'\n            break\n\n          case 'xy':\n            method = 'light.hue.xy'\n            break\n        }\n\n        if (method)\n          return self.groupAction(method, args, group)\n      }).filter((req) => req != null)\n\n      await Promise.all(requests)\n      await this.refresh(true)\n    },\n\n    async setScene(event) {\n      await this.groupAction('light.hue.scene',  {\n        name: this.scenes[event.sceneId].name,\n        groups: [this.groups[event.groupId].name],\n      }, this.groups[event.groupId])\n\n      await this.refresh(true)\n    },\n\n    async refresh(background) {\n      if (!background)\n        this.loading = true\n\n      try {\n        [this.lights, this.groups, this.scenes, this.animations] = await Promise.all([\n          this.getLights(),\n          this.getGroups(),\n          this.getScenes(),\n          this.getAnimations(),\n        ])\n      } finally {\n        if (!background)\n          this.loading = false\n      }\n    },\n\n    async startAnimation(event) {\n      await this.request('light.hue.animate', {\n        lights: event.lights,\n        ...event.animation,\n      })\n\n      await this.refresh(true)\n    },\n\n    async stopAnimation() {\n      await this.request('light.hue.stop_animation')\n      await this.refresh(true)\n    },\n\n    onLightChanged(event) {\n      this.lights[event.id].state = {\n        ...this.lights[event.id].state,\n        ...event.state,\n      }\n    },\n  },\n\n  mounted() {\n    this.refresh()\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.lights-plugin {\n  @include until($tablet) {\n    padding: 0.5em;\n  }\n}\n</style>\n","<script>\nexport default {\n  name: \"Utils\",\n  data() {\n    return {\n      lights: {},\n      groups: {},\n      scenes: {},\n      animations: {},\n      loadingLights: {},\n      loadingGroups: {},\n    }\n  },\n\n  computed: {\n    groupsByName() {\n      if (!this.groups)\n        return {}\n\n      return Object.entries(this.groups).reduce((groups, [id, group]) => {\n        groups[group.name || id] = {\n          ...group,\n          id: id,\n        }\n\n        return groups\n      }, {})\n    },\n  },\n\n  methods: {\n    _getGroups(groupIds) {\n      const groups = groupIds.filter((id) => id != null)\n      if (!groups.length)\n        return Object.values(this.groups)\n\n      const self = this\n      return groups.map((id) => id instanceof Object ? id : self.groups[id])\n    },\n\n    _getLights(lightIds) {\n      const lights = lightIds.filter((id) => id != null)\n      if (!lights.length)\n        return Object.values(this.lights)\n\n      const self = this\n      return lights.map((id) => id instanceof Object ? id : self.lights[id])\n    },\n\n    setGroupsLoading(groupsIds) {\n      const self = this\n      this._getGroups(groupsIds).forEach((group) => {\n        self.loadingGroups[group.id] = true\n        if (group.lights)\n          self.setLightsLoading(group.lights)\n      })\n    },\n\n    unsetGroupsLoading(groupsIds) {\n      const self = this\n      this._getGroups(groupsIds).forEach((group) => {\n        if (group.id in self.loadingGroups)\n          delete self.loadingGroups[group.id]\n        if (group.lights)\n          self.setLightsLoading(group.lights)\n      })\n    },\n\n    setLightsLoading(lightIds) {\n      const self = this\n      this._getLights(lightIds).forEach((light) => {\n        self.loadingLights[light.id] = true\n      })\n    },\n\n    unsetLightsLoading(lightIds) {\n      const self = this\n      this._getLights(lightIds).forEach((light) => {\n        if (light.id in self.loadingLights)\n          delete self.loadingLights[light.id]\n      })\n    },\n\n    async groupAction(action, args, ...groups) {\n      this.setGroupsLoading(groups)\n      try {\n        return await this.request(action, args)\n      } finally {\n        this.unsetGroupsLoading(groups)\n      }\n    },\n\n    async lightAction(action, args, ...lights) {\n      this.setLightsLoading(lights)\n      try {\n        return await this.request(action, args)\n      } finally {\n        this.unsetLightsLoading(lights)\n      }\n    },\n\n  },\n}\n</script>\n","import script from \"./Utils.vue?vue&type=script&lang=js\"\nexport * from \"./Utils.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./Index.vue?vue&type=template&id=1b32374c&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=1b32374c&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1b32374c\"]])\n\nexport default __exports__"],"names":["loading","config","lights","groups","scenes","animations","initialGroup","loadingGroups","colorConverter","toggleGroup","onLightChanged","toggleLight","setLight","setGroup","setScene","startAnimation","stopAnimation","refresh","name","data","loadingLights","computed","groupsByName","this","Object","entries","reduce","id","group","methods","_getGroups","groupIds","filter","length","values","self","map","_getLights","lightIds","setGroupsLoading","groupsIds","forEach","setLightsLoading","unsetGroupsLoading","light","unsetLightsLoading","groupAction","action","args","request","lightAction","__exports__","components","Loading","LightPlugin","mixins","props","type","default","hue","sat","bri","ct","keys","getLights","getGroups","recycle","toLowerCase","obj","getScenes","scene","getAnimations","event","requests","value","attr","method","req","Promise","all","groupId","sceneId","background","animation","state","mounted","render"],"sourceRoot":""}